IndLogi
Ind <- Ind[order(Ind)]
Ind <- sample(seq(nrow(YandF)),1000,replace=FALSE)
Ind <- Ind[order(Ind)]
plot(YandF[Ind,c(2,3)])
head(YandF[Ind,c(2,3)])
YandF[sample(seq(nrow(YandF)),100),]
rm(list=ls())
library(plyr)
library(dplyr)
library(ggplot2)
source("~/Kaggle Competitions/Two Sigma/TwoSigFuncs.R")
load("~/Kaggle Competitions/Two Sigma/Data/KagTwoSigDataSplit")
ZCutOff <- 3 #dum
IndLogi <- FALSE
#Should add an option whereby we can add multiple level of an indicator function.
#Like an indicator function for whether we are above one threshold, and then another
#one for if we are observe another threshold (same feature)
DataById <- rbind.fill(DataById) #Not in DataById form anymore though..
feats <- setdiff(names(DataById),c("id","timestamp","y"))
nr <- nrow(DataById)
MeanY <- mean(DataById$y)
StdevY <- sd(DataById$y)
MakeFunc <- function(ft,LowLogi,IndLogi,BP){
force(ft)
force(BP)
if(IndLogi){
if(LowLogi){
fnc <- function(x){
Ind <- x[, ft] <= BP
Ind[is.na(Ind)] <- FALSE
Ind
}
} else {
fnc <- function(x){
Ind <- x[, ft] >= BP
Ind[is.na(Ind)] <- FALSE
Ind
}
}
} else {
if(LowLogi){
fnc <- function(x){
Ind <- pmin(x[, ft] - BP, 0)
Ind[is.na(Ind)] <- 0
Ind
}
} else {
fnc <- function(x){
Ind <- pmax(x[, ft] - BP, 0)
Ind[is.na(Ind)] <- 0
Ind
}
}
}
fnc
}
FormCumZ <- function(df,LowLogi){
#Assumes first column is y and second is the feature
if(LowLogi){
df <- df[order(df[,2]),]
} else {
df <- df[order(-df[,2]),]
}
df$CumMeanY <- cumsum(df[,1]) / seq(nrow(df))
df$CumZ <- (df$CumMeanY - MeanY)/(StdevY/sqrt(seq(nrow(df))))
df
}
funcs <- list()
ft <- feats[1] #dum
YandF <- DataById[!is.na(DataById[,ft]),c("y",ft)]
YandFCum <- FormCumZ(YandF,TRUE)
MaxAbsZ <- max(abs(YandFCum$CumZ))
if(MaxAbsZ>ZCutOff){
BreakPoint <- YandFCum[which.max(abs(YandFCum$CumZ)),ft]
nm <- paste(ft,'-Inf',round(BreakPoint,2),sep="_")
funcs[[nm]] <- MakeFunc(ft,TRUE,IndLogi,BreakPoint)
}
YandFCum <- FormCumZ(YandF,FALSE)
MaxAbsZ <- max(abs(YandFCum$CumZ))
if(MaxAbsZ>ZCutOff){
BreakPoint <- YandFCum[which.max(abs(YandFCum$CumZ)),ft]
nm <- paste(ft,round(BreakPoint,2),'Inf',sep="_")
funcs[[nm]] <- MakeFunc(ft,FALSE,IndLogi,BreakPoint)
}
names(funcs)
YandF$a <- funcs[[2]](YandF)
YandF[sample(seq(nrow(YandF)),100),]
YandF[sample(seq(nrow(YandF)),100),]
mean(YandF$a!=0)
Idx <- sample(seq(nrow(YandF)),1000)
Idx <- Idx[order(Idx)]
plot(YandFCum$CumZ[Idx])
max(abs(YandFCum$CumZ))
choose(20,10)
2^5
19*17*15
19*17*15*14
19*17*15*13
19*17*15*13*32
version()
source('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/Interest by Day/InterestByDay.R')
head(datDF)
source('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/Interest by Day/InterestByDay.R')
source('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/Interest by Day/InterestByDay.R')
getwd()
plot(cars)
source('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/Interest by Day/InterestByDay.R')
source('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/InterestByDay.R')
rm(list=ls())
source("TwoSigmaRentalsFuncs.R")
library(magrittr)
library(plyr)
library(dplyr)
library(ggplot2)
getwd()
den = read.csv('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/checkdensity.csv')
head(den)
g <- ggplot(den,aes(x=latitude,y=longitude,size=density))+ geom_point()
print(g)
min(den$latitude)
max(den$latitude)
max(den$longitude)
min(den$longitude)
den2 = den[den$latitude!=0 & den$longitude!=0,]
g <- ggplot(den2,aes(x=latitude,y=longitude,size=density))+ geom_point()
print(g)
TukOutlier <- function(x,k=1.5){
x <- x[!is.na(x)] #Remove Nas first
Qs <- quantile(x,probs = c(.25,.75))
dist <- k*(Qs[2]-Qs[1])
min <- Qs[1]-dist
max <- Qs[2]+dist
x[x>=min & x<=max]
}
den2 = den[den$latitude>39 & den$latitude<41 & den$longitude>-80,]
g <- ggplot(den2,aes(x=latitude,y=longitude,size=density))+ geom_point()
print(g)
den2 = den[den$latitude>40.5 & den$latitude<40.9 & den$longitude>-74.5 & den%Longitude<-73.5,]
den2 = den[den$latitude>40.5 & den$latitude<40.9 & den$longitude>-74.5 & den$longitude<-73.5,]
den2 = den[den$latitude>40.5 & den$latitude<40.9 & den$longitude>-74.5 & den$longitude<(-73.5),]
g <- ggplot(den2,aes(x=latitude,y=longitude,size=density))+ geom_point()
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude,size=density))+ geom_point()
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude,fill=density))+ geom_point()
print(g)
den2 = den[den$latitude>40.5 & den$latitude<40.9 & den$longitude>-74.1 & den$longitude<(-73.5),]
g <- ggplot(den2,aes(x=longitude,y=latitude,fill=density))+ geom_point()
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude,fill=density))+ geom_point(alpha=.1)
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude,color=density))+ geom_point()
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude))+ geom_point(color=density)
print(g)
den = read.csv('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/checkdensity.csv')
g <- ggplot(den,aes(x=longitude,y=latitude))+ geom_point(color=density)
print(g)
g <- ggplot(den,aes(x=longitude,y=latitude,color=density))+ geom_point()
print(g)
nrow(den)
den = read.csv('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/checkdensity.csv')
g <- ggplot(den,aes(x=longitude,y=latitude,color=density))+ geom_point()
print(g)
den2 <- den[den$longitude<(-72),]
g <- ggplot(den2,aes(x=longitude,y=latitude,color=density))+ geom_point()
print(g)
den = read.csv('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/checkdensity.csv')
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05),]
summary(den)
den = read.csv('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/checkdensity.csv')
den = read.csv('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/checkdensity.csv')
head(den)
str(den)
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05),]
g <- ggplot(den2,aes(x=longitude,y=latitude,color=density))+ geom_point()
print(g)
head(den2)
summary(den1)
summary(den2)
g <- ggplot(den2,aes(x=longitude,y=latitude,color=Density))+ geom_point()
print(g)
den = read.csv('~/Kaggle Competitions/Two Sigma Rental Listing Inquiries/R Work/LatLongDensities.csv')
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05),]
g <- ggplot(den2,aes(x=longitude,y=latitude,color=Densities))+ geom_point()
print(g)
den2 <- den[den$latitude<40.75 & den$latitude>40.7 & den$longitude<(-73.9) & den$longitude>(-74.05),]
g <- ggplot(den2,aes(x=longitude,y=latitude,color=Densities))+ geom_point()
print(g)
den2 <- den[den$latitude<40.75 & den$latitude>40.7 & den$longitude<(-73.97) & den$longitude>(-74),]
g <- ggplot(den2,aes(x=longitude,y=latitude,color=Densities))+ geom_point()
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude,fill=Densities))+ geom_point()
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude,size=Densities))+ geom_point()
g <- ggplot(den2,aes(x=longitude,y=latitude,size=Densities))+ geom_point(alpha=0.01)
print(g)
den2 <- den[den$latitude<40.75 & den$latitude>40.7 & den$longitude<(-73.9) & den$longitude>(-74.05),]
g <- ggplot(den2,aes(x=longitude,y=latitude,size=Densities))+ geom_point(alpha=0.01)
print(g)
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05),]
g <- ggplot(den2,aes(x=longitude,y=latitude,size=Densities))+ geom_point(alpha=0.01)
print(g)
hist(den$Densities)
hist(den2$Densities)
summary(den2$Densities)
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05) & den$Densities>-1.51,]
g <- ggplot(den2,aes(x=longitude,y=latitude,size=Densities))+ geom_point(alpha=0.01)
print(g)
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05) & den$Densities>-2,]
g <- ggplot(den2,aes(x=longitude,y=latitude,color=Densities))+ geom_point(alpha=0.01)
print(g)
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05) & den$Densities>-8,]
g <- ggplot(den2,aes(x=longitude,y=latitude,color=Densities))+ geom_point(alpha=0.01)
print(g)
den2 <- den[den$latitude<40.9 & den$latitude>40.6 & den$longitude<(-73.9) & den$longitude>(-74.05) & den$Densities>-2,]
print(g)
g <- ggplot(den2,aes(x=longitude,y=latitude,color=Densities))+ geom_point(alpha=0.3)
print(g)
source('~/R Experiments/t-SNE/tSNE.R')
source('~/Sports Betting/Simulation and Calibration/Sim_Cal_Mod1.R')
getwd()
Hours <- read.csv('HoursRaw.csv')
head(Hours)
Hours$Day <- as.Date(Hours$Day,format="%m/%d/%Y")
head(HOURS)
head(Hours)
library(ggplot2)
library(reshape2)
dat <- melt(Hours,id=Day)
dat <- melt(Hours,id="Day")
head(dat)
head(Dat)
head(dat)
dat <- melt(Hours,id="Day")
g <- ggplot(Hours,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
dat <- melt(Hours,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
head(Hours)
Hours2 <- Hours
head(Hours2)
Hours2[is.na(Hours2)] <- 0
dat <- melt(Hours,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
head(Hours2)
dim(Hours2)
Hours2 <- Hours
Hours2[is.na(Hours2)] <- 0
for (i in seq(3,14)){
Hours2[i] <- Hours2[i] + Hours2[i-1]
}
dat <- melt(Hours,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
Hours2 <- Hours
Hours2[is.na(Hours2)] <- 0
for (i in seq(3,13)){
Hours2[i] <- Hours2[i] + Hours2[i-1]
}
dat <- melt(Hours,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
head(Hours2)
Hours2 <- Hours
Hours2[is.na(Hours2)] <- 0
for (i in seq(3,13)){
Hours2[i] <- Hours2[i] + Hours2[i-1]
}
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
Hours2 <- Hours
Hours2[is.na(Hours2)] <- 0
for (i in seq(3,13)){
Hours2[i] <- Hours2[i] + Hours2[i-1]
}
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave(hours,width=20,height=5)
Hours2 <- Hours
Hours2[is.na(Hours2)] <- 0
for (i in seq(3,13)){
Hours2[i] <- Hours2[i] + Hours2[i-1]
}
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
head(Hours2)
max(Hours2$Applying.for.Jobs)
apply(Hours,2,sum)
apply(Hours[,2:13],2,sum)
apply(Hours[,2:13],2,function(x) sum(x,na.rm=TRUE))
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
for (i in seq(3,13)){
Hours2[i] <- Hours2[i] + Hours2[i-1]
}
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
len(Hours2)
length(Hours2)
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
for (i in seq(3,length(Hours2))){
Hours2[i] <- Hours2[i] + Hours2[i-1]
}
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs","Coding.Advanced.R")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
# for (i in seq(3,length(Hours2))){
#   Hours2[i] <- Hours2[i] + Hours2[i-1]
# }
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs","Coding.Advanced.R")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
# for (i in seq(3,length(Hours2))){
#   Hours2[i] <- Hours2[i] + Hours2[i-1]
# }
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=40,height=5)
library(lubridate)
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs","Coding.Advanced.R")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
Hours2 <- Hours2[year(Hours2$Day)==2017,]
# for (i in seq(3,length(Hours2))){
#   Hours2[i] <- Hours2[i] + Hours2[i-1]
# }
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=40,height=5)
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs","Coding.Advanced.R")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
Hours2 <- Hours2[year(Hours2$Day)==2017,]
# for (i in seq(3,length(Hours2))){
#   Hours2[i] <- Hours2[i] + Hours2[i-1]
# }
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs","Coding.Advanced.R")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
Hours2 <- Hours2[year(Hours2$Day)==2016,]
# for (i in seq(3,length(Hours2))){
#   Hours2[i] <- Hours2[i] + Hours2[i-1]
# }
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs","Coding.Advanced.R")
Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
# Hours2 <- Hours2[year(Hours2$Day)==2016,]
# for (i in seq(3,length(Hours2))){
#   Hours2[i] <- Hours2[i] + Hours2[i-1]
# }
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
# Drop <- c("Implementing.ML.Techniques","Quora","CLRS","Quora","Mental.Math","Applying.for.Jobs","Coding.Advanced.R")
# Hours2 <- Hours[,setdiff(names(Hours),Drop)]
Hours2[is.na(Hours2)] <- 0
# Hours2 <- Hours2[year(Hours2$Day)==2016,]
# for (i in seq(3,length(Hours2))){
#   Hours2[i] <- Hours2[i] + Hours2[i-1]
# }
dat <- melt(Hours2,id="Day")
g <- ggplot(dat,aes(x=Day,y=value,fill=variable)) + geom_area()
print(g)
ggsave('hours.png',width=20,height=5)
head(Hours2)
apply(as.matrix(Hours[,2:13]),1,sum)
apply(as.matrix(Hours[,2:13]),1,function(x) sum(x.na.rm=TRUE))
head(Hours2)
apply(as.matrix(Hours[,2:13]),1,function(x) sum(x,na.rm=TRUE))
Total = apply(as.matrix(Hours[,2:13]),1,function(x) sum(x,na.rm=TRUE))
Total
plot(Total)
mean(Total)
range(Hours$Day)
hist(Total)
hist(Total,breaks = 30)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
pi()
pi
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
length(y_true)
source('~/.active-rstudio-document', echo=TRUE)
s_mat1
s_mat1 %*% y
trace(s_mat1)
Tr(s_mat1)
tr(s_mat1)
sum(diag(s_mat1))
sum(diag(s_mat2))
spline1.yin - s_mat1 %*% y
spline1$yin - s_mat1 %*% y
spline1$y - s_mat1 %*% y
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
spline1.y
source('~/.active-rstudio-document', echo=TRUE)
plot(dat1)
source('~/.active-rstudio-document', echo=TRUE)
g <- ggplot2(dat,aex(x=x)) + geom_point(y_hat)
source('~/.active-rstudio-document', echo=TRUE)
g <- ggplot2(dat,aex(x=x)) + geom_point(y_hat)
g <- ggplot(dat,aex(x=x)) + geom_point(y_hat)
g <- ggplot(dat1,aex(x=x)) + geom_point(y_hat)
g <- ggplot(dat1,aes(x=x)) + geom_point(y_hat)
g <- ggplot(dat1,aes(x=x)) + geom_point(aes(y=y_hat))
g
g <- ggplot(dat1,aes(x=x,y=y)) + geom_point()
g
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
g <- ggplot(dat1,aes(x=x,y=y)) + geom_point(color='r',alpha=.3,size=1.5)
g <- remove_back(g)
g
g <- ggplot(dat1,aes(x=x,y=y)) + geom_point(color='red',alpha=.3,size=1.5)
g <- remove_back(g)
g
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
make_spl_graph(dat1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
repeat(1+1,2)
repeat(1+1)
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
make_vec()
matrix(na,nrow=2,ncol=2)
matrix(nrow=2,ncol=2)
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
matrix(nrow=2,ncol=2)seq(n_streams)
seq(n_streams)
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
y_stream
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
g <- ggplot(to_plot,aes(x=y_i_in,y=y_i_out)) + geom_point(alpha=.5)
g
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
g
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
y_hat_B[:10,:10]
y_hat_B[1:10,1:10]
y_hat_B[1:5,1:5]
y_stream[1:5,1:5]
y_stream[49:51,1:5]
y_hat_B[49:51,1:5]
tr(S_mat_B)
sum(diag(S_mat_B))
sum(diag(S_mat_A))
len(x)
length(x)
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
tr(S_mat_B)
sum(diag(S_mat_B))
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
sum(diag(S_mat_B))
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
sum(diag(S_mat_B))
sum(diag(S_mat_A))
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
sum(diag(S_mat_A))
sum(diag(S_mat_B))
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
source('C:/Users/Duane/Dropbox/Quora/MatrixTrace/MakeData.R')
